% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/fetchGrinnNetwork.R
\name{fetchGrinnNetwork}
\alias{fetchGrinnNetwork}
\title{Compute an integrated network using information from grinn internal database}
\usage{
fetchGrinnNetwork(txtInput, from, to, filterSource, returnAs, dbXref)
}
\arguments{
\item{txtInput}{vector of keywords containing keyword ids e.g. txtInput = list('id1', 'id2').
The keyword ids are from the specified database, see \code{dbXref}. Default is grinn id e.g. X371.}

\item{from}{string of start node. It can be one of "metabolite","protein","gene","pathway".}

\item{to}{string of end node. It can be one of "metabolite","protein","gene","pathway".}

\item{filterSource}{string or list of pathway databases. The argument is required, if \code{from} or \code{to = "pathway"}, see \code{from} and \code{to}.
The argument value can be any of "SMPDB","KEGG","REACTOME" or combination of them e.g. list("KEGG","REACTOME").}

\item{returnAs}{string of output type. Specify the type of the returned network.
It can be one of "tab","json","cytoscape", default is "tab". "cytoscape" is the format used in Cytoscape.js}

\item{dbXref}{string of database name. Specify the database name used for the txtInput ids, see \code{txtInput}.
It can be one of "grinn","chebi","kegg","pubchem","inchi","hmdb","smpdb","reactome","uniprot","ensembl","entrezgene". Default is "grinn".
If pubchem is used, it has to be pubchem SID (substance ID).}
}
\value{
list of nodes and edges. The list is with the following componens: edges and nodes. Return empty list if found nothing
}
\description{
from the list of keywords, build an integrated network (grinn network) by connecting these keywords to a specified node type.
The keywords can be any of these node types: metabolite, protein, gene and pathway.
Grinn internal database contains the networks of the following types that can be quried:
metabolite-protein, metabolite-protein-gene, metabolite-pathway, protein-gene, protein-pathway and gene-pathway.
}
\examples{
# Query genes by ENSEMBL ids and build a grinn network of gene-protein-metabolite
txtInput <- list('ENSG00000140459','ENSG00000143811','ENSG00000104524')
result <- fetchGrinnNetwork(txtInput, from="gene", to="metabolite", returnAs="tab", dbXref="ensembl")
library(igraph)
plot(graph.data.frame(result$edges[,1:2], directed=FALSE))
# Query metabolites by grinn ids and build a grinn network of metabolite-pathway
txtInput <- c('X371','X783')
result <- fetchGrinnNetwork(txtInput, from="metabolite", to="pathway", returnAs="json")
# Query metabolites by grinn ids and build a network of metabolite-pathway using information from KEGG and REACTOME
txtInput <- c('X371','X783')
result <- fetchGrinnNetwork(txtInput, from="metabolite", to="pathway", filterSource=list("KEGG","REACTOME"), returnAs="tab")
# Query proteins by uniprot ids and build a network of protein-pathway using information from SMPDB
txtInput <- list('P05108','Q53H96','P18463')
result <- fetchGrinnNetwork(txtInput, from="protein", to="pathway", filterSource="SMPDB", returnAs="cytoscape", dbXref="uniprot")
}
\author{
Kwanjeera W \email{kwanich@ucdavis.edu}
}
\seealso{
\url{http://js.cytoscape.org/}
}

