% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetchGrinnPtCorrNetwork.R
\name{fetchGrinnPtCorrNetwork}
\alias{fetchGrinnPtCorrNetwork}
\title{Combine a grinn network queried from Grinn internal database to a partial correlation network}
\usage{
fetchGrinnCorrNetwork(txtInput, from, to, filterSource, returnAs, dbXref, datX, corrCoef, pval, alpha, epsilon, matrix.completion)
}
\arguments{
\item{txtInput}{list of keywords containing keyword ids e.g. txtInput = list('id1', 'id2'). 
The keyword ids are from the specified database, see \code{dbXref}. Default is grinn id e.g. G371.}

\item{from}{string of start node. It can be one of "metabolite","protein","gene","pathway".}

\item{to}{string of end node. It can be one of "metabolite","protein","gene","pathway".}

\item{filterSource}{string or list of pathway databases. The argument is required, if \code{from} or \code{to = "pathway"}, see \code{from} and \code{to}.
The argument value can be any of "SMPDB","KEGG","REACTOME" or combination of them e.g. list("KEGG","REACTOME").}

\item{returnAs}{string of output type. Specify the type of the returned network. 
It can be one of "tab","json","cytoscape", default is "tab". "cytoscape" is the format used in Cytoscape.js}

\item{dbXref}{string of database name. Specify the database name used for the txtInput ids, see \code{txtInput}. 
It can be one of "grinn","chebi","kegg","pubchem","inchi","hmdb","smpdb","reactome","uniprot","ensembl","entrezgene". Default is "grinn".
If pubchem is used, it has to be pubchem SID (substance ID).}

\item{datX}{data frame containing normalized, quantified omics data e.g. expression data, metabolite intensities. 
Columns correspond to entities e.g. genes, metabolites, and rows to samples e.g. normals, tumors. 
Require 'nodetype' at the first row to indicate the type of entities in each column. See below for details.}

\item{corrCoef}{numerical value to define the minimum value of absolute correlation, from 0 to 1, to include edges in the output.}

\item{pval}{numerical value to define the maximum value of pvalues, to include edges in the output.}

\item{alpha}{a numeric value specifying significance level of each test used in \code{\link{qpAvgNrr}}.}

\item{epsilon}{a numeric value specifying the maximum cutoff value of the non-rejection rate met by the edges that are included in the qp-graph, see \code{\link{qpGraph}}.}

\item{matrix.completion}{a string specifying algorithm to employ in the matrix completion operations used in \code{\link{qpPAC}}}
}
\value{
list of nodes and edges. The list is with the following componens: edges and nodes. Return empty list if found nothing
}
\description{
from the list of keywords and input omics data e.g. normalized expression data or metabolomics data, it is a one step function to:

1. Build an integrated network (grinn network) by connecting these keywords to a specified node type, see \code{\link{fetchGrinnNetwork}}.
The keywords can be any of these node types: metabolite, protein, gene and pathway.
The Grinn internal database contains the networks of the following types that can be quried: 
metabolite-protein, metabolite-protein-gene, metabolite-pathway, protein-gene, protein-pathway and gene-pathway. 

2. Compute a partial correlation network of input omics data, see \code{datX}.
Correlation coefficients, pvalues and relation directions are calculated using qpgraph functions.
The correlation coefficients are continuous values between -1 (negative correlation) and 1 (positive correlation), with numbers close to 1 or -1, meaning very closely correlated.

3. Combine the grinn network to the correlation network.
}
\details{
datX is matrix in which rows are samples and columns are entities. The correlations of the columns of datX are computed.
}
\examples{
# Create metabolite-gene network from the list of metabolites using grinn ids and combine the grinn network to a correlation network of metabolites
kw <- c('G160','G300','G371')
dummy <- rbind(nodetype=rep("metabolite"),t(mtcars))
colnames(dummy) <- c('G1.1','G27967','G371','G4.1',paste0('G',sample(400:22000, 28)))
result <- fetchGrinnPtCorrNetwork(txtInput=kw, from="metabolite", to="gene", datX=dummy, corrCoef=0.7, pval=0.05)
library(igraph)
plot(graph.data.frame(result$edges[,1:2], directed=FALSE))
}
\author{
Kwanjeera W \email{kwanich@ucdavis.edu}
}
\references{
Castelo R. and Roverato A. (2006) A robust procedure for Gaussian graphical model search from microarray data with p larger than n. J. Mach. Learn. Res., 7:2621-2650.

Castelo R. and Roverato A. (2009) Reverse engineering molecular regulatory networks from microarray data with qp-graphs. J Comput Biol, 16(2), pp. 213-27.
}
\seealso{
\pkg{\link{qpgraph}}, \code{\link{qpAvgNrr}}, \code{\link{qpGraph}}, \code{\link{qpPAC}}, \code{\link{fetchGrinnNetwork}}, \url{http://js.cytoscape.org/}
}

