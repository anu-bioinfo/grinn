% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/combineNetwork.R
\name{combineNetwork}
\alias{combineNetwork}
\title{Combine a grinn network queried from grinn internal database to a provided network}
\usage{
combineNetwork(grinnw, othernw, returnAs)
}
\arguments{
\item{grinnw}{list of nodes and edges, queried from grinn internal database using \code{fetchGrinnNetwork}.}

\item{othernw}{list of nodes and edges, computed from \code{fetchCorrNetwork}, \code{fetchWGCNAModule}, \code{fetchDiffCorrNetwork}
where \code{returnAs = "tab"}, or generated by other methods.
If using other methods, the input network must be in the following format:
\code{nodes} = data.frame(id,nodename,nodetype) #nodes contain at least 3 columns with defined names
\code{edges} = data.frame(source,target,reltype,relname) #edges contain at least 4 columns with defined names
\code{othernw} = list(nodes,edges)
Also by using other methods, node ids should be converted to grinn ids. It can be done by \code{convertToGrinnID} before generating the input network.}

\item{returnAs}{string of output type. Specify the type of the returned network.
It can be one of "tab","json","cytoscape", default is "tab". "cytoscape" is the format used in Cytoscape.js}
}
\value{
list of nodes and edges. The list is with the following componens: edges and nodes. Return empty list if error.
}
\description{
The function combines a grinn network computed from \code{fetchGrinnNetwork} to a network generated by \code{fetchCorrNetwork},
\code{fetchWGCNAModule}, \code{fetchDiffCorrNetwork} where \code{returnAs = "tab"}. Or it can combine other networks with defined format, see \code{othernw}.
}
\examples{
# Create metabolite-protein network from the list of metabolites using grinn ids and combine the grinn network to a correlation network
kw <- c('X160','X300','X371')
grinnnw <- fetchGrinnNetwork(txtInput=kw, from="metabolite", to="protein")
dummy <- rbind(nodetype=rep("metabolite"),t(mtcars))
colnames(dummy) <- c('X160','X300','X371','X367',paste0('X',sample(400:22000, 28)))
corrnw <- fetchCorrNetwork(datNormX=dummy, datNormY=NULL, corrCoef=0.5, pval= 1e-12, method="pearson", returnAs="tab")
result <- combineNetwork(grinnnw,corrnw)
library(igraph)
plot(graph.data.frame(result$edges[,1:2], directed=FALSE))
# Create metabolite-protein network from the list of metabolites using grinn ids and combine the grinn network to a provided network
txtInput <- list('X371','X783','X1.1')
grinnnw <- fetchGrinnNetwork(txtInput, from="metabolite", to="protein")
othernw = list()
othernw$nodes = data.frame(id=c("X371","X783","XXX","YYY"),nodename=c("X371","X783","XXX","YYY"),nodetype=c("metabolite","metabolite","protein","protein"),stringsAsFactors = FALSE)
othernw$edges = data.frame(source=c("X371","X783"),target=c("XXX","YYY"),corr_coef=c(-0.368,0.385),pval=c(0.000927,0.000497),reltype=c("Metabolite_Protein","Metabolite_Protein"),relname=c("CORRELATION","CORRELATION"),stringsAsFactors = FALSE)
result <- combineNetwork(grinnnw,othernw)
}
\author{
Kwanjeera W \email{kwanich@ucdavis.edu}
}
\seealso{
\url{http://js.cytoscape.org/}, \code{\link{fetchGrinnNetwork}}, \code{\link{fetchCorrNetwork}}, \code{\link{fetchWGCNAModule}}, \code{\link{fetchDiffCorrNetwork}}
}

