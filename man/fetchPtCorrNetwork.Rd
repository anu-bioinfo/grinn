% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetchPtCorrNetwork.R
\name{fetchPtCorrNetwork}
\alias{fetchPtCorrNetwork}
\title{Compute partial correlation network}
\usage{
fetchPtCorrNetwork(datX,  corrCoef, pval, alpha, epsilon, matrix.completion, returnAs)
}
\arguments{
\item{datX}{data frame containing normalized, quantified omics data e.g. expression data, metabolite intensities. 
Columns correspond to entities e.g. genes, metabolites, and rows to samples e.g. normals, tumors. 
Require 'nodetype' at the first row to indicate the type of entities in each column. See below for details.}

\item{corrCoef}{numerical value to define the minimum value of absolute correlation, from 0 to 1, to include edges in the output.}

\item{pval}{numerical value to define the maximum value of pvalues, to include edges in the output.}

\item{alpha}{a numeric value specifying significance level of each test used in \code{\link{qpAvgNrr}}.}

\item{epsilon}{a numeric value specifying the maximum cutoff value of the non-rejection rate met by the edges that are included in the qp-graph, see \code{\link{qpGraph}}.}

\item{matrix.completion}{a string specifying algorithm to employ in the matrix completion operations used in \code{\link{qpPAC}}}

\item{returnAs}{string of output type. Specify the type of the returned network. 
It can be one of "tab","json","cytoscape". "cytoscape" is the format used in Cytoscape.js}
}
\value{
list of nodes and edges. The list is with the following componens: edges and nodes. Return empty list if found nothing
}
\description{
compute the partial correlation network of entities from raw or quantified data, see details.
}
\details{
The function wraps around the functions of \pkg{\link{qpgraph}}.
Partial correlation coefficients, p-values and correlation directions are calculated.
The partial correlation coefficients are continuous values between -1 (negative correlation) and 1 (positive correlation), with numbers close to 1 or -1, meaning very closely correlated.
The datX is matrix in which rows are samples and columns are entities.
If grinn functions will be used in further analyses, the column names of datX are suggested to use grinn ids. 
\code{convertToGrinnID} is provided for id conversion, see \code{\link{convertToGrinnID}}.
}
\examples{
#dt = read.csv("~/Documents/grinn_sample/lung_miyamoto/metAdj.txt",sep="\\t",header=TRUE,row.names=1)
#nw = fetchPtCorrNetwork(datX=dt, corrCoef=0.5, pval=0.05, returnAs="tab")
# Compute a par-correlation network of metabolites
#dummy <- rbind(nodetype=rep("metabolite"),t(mtcars))
#colnames(dummy) <- c('G1.1','G27967','G371','G4.1',paste0('G',sample(400:22000, 28)))
#result <- fetchPtCorrNetwork(datX=dummy, corrCoef=0.7, pval=0.05, returnAs="tab")
#library(igraph)
#plot(graph.data.frame(result$edges[,1:2], directed=FALSE))
}
\author{
Kwanjeera W \email{kwanich@ucdavis.edu}
}
\references{
Castelo R. and Roverato A. (2006) A robust procedure for Gaussian graphical model search from microarray data with p larger than n. J. Mach. Learn. Res., 7:2621-2650.

Castelo R. and Roverato A. (2009) Reverse engineering molecular regulatory networks from microarray data with qp-graphs. J Comput Biol, 16(2), pp. 213-27.
}
\seealso{
\pkg{\link{qpgraph}}, \code{\link{qpAvgNrr}}, \code{\link{qpGraph}}, \code{\link{qpPAC}}
}

